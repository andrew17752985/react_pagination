{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","Array","from","length","_","i","handlePageChange","newPage","className","href","onClick","map","page","App","useState","setCurrentPage","setPerPage","startIndex","endIndex","displayedItems","to","numbers","n","push","getNumbers","slice","min","id","onChange","e","newPerPage","parseInt","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAc,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAEzDC,EAAmB,SAACC,GACpBA,IAAYZ,GACdC,EAAaW,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBb,GAAqB,YAAjD,SACE,mBACE,UAAQ,WACRa,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAAS,kBAAMJ,EAAiBX,EAAc,IALhD,oBAUDK,EAAMW,KAAI,SAACC,GAAD,OACT,oBAEEJ,UAAS,oBAAeb,IAAgBiB,GAAQ,UAFlD,SAIE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMJ,EAAiBM,IAJlC,SAMGA,KATEA,MAaT,oBAAIJ,UAAS,oBAAeb,IAAgBE,GAAc,YAA1D,SACE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAAS,kBAAMJ,EAAiBX,EAAc,IALhD,wBC9CKkB,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAA8BD,mBAAiB,GAA/C,mBAAOpB,EAAP,KAAgBsB,EAAhB,KAIMC,GAAsBtB,EAAc,GAAKD,EACzCwB,EAAmBD,EAAavB,EAChCyB,ECfD,SAAoBjB,EAAckB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIpB,EAAMoB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDKiBG,CAAW,EADhB,IAC+Bb,KAAI,SAACW,GAAD,qBAAeA,MAG9BG,MAAMR,EAAYC,GAazD,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,kBACQb,EADR,WAC6BsB,EAAa,EAD1C,MACgDnB,KAAK4B,IAAIR,EAtB1C,IAqBf,OArBe,GAqBf,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,SArBkB,SAACC,GAC3B,IAAMC,EAAqBC,SAASF,EAAEG,OAAOC,MAAO,IAEpDjB,EAAWc,GACXf,EAAe,IAkBPkB,MAAOvC,EALT,UAOE,wBAAQuC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MA/Ca,GAgDbC,QAASA,EACTC,YAAaA,EACbC,aA5CmB,SAACW,GACxBQ,EAAeR,MA8Cb,6BACGY,EAAeR,KAAI,SAACwB,GAAD,OAClB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE/DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.baf89bb0.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage !== currentPage) {\n      onPageChange(newPage);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={`page-item ${currentPage === page && 'active'}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === totalPages && 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n\n  const totalItems = 42;\n  const items: string[] = getNumbers(1, totalItems).map((n) => `Item ${n}`);\n  const startIndex: number = (currentPage - 1) * perPage;\n  const endIndex: number = startIndex + perPage;\n  const displayedItems: string[] = items.slice(startIndex, endIndex);\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage: number = parseInt(e.target.value, 10);\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {startIndex + 1} - {Math.min(endIndex, totalItems)} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {displayedItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}